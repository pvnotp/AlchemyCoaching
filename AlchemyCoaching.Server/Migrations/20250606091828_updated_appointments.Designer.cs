// <auto-generated />
using System;
using AlchemyCoaching.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AlchemyCoaching.Server.Migrations
{
    [DbContext(typeof(DemoDbContext))]
    [Migration("20250606091828_updated_appointments")]
    partial class updated_appointments
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("AlchemyCoaching")
                .HasAnnotation("ProductVersion", "8.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ClientPortal.Server.Entities.Appointment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Coach")
                        .HasColumnType("int");

                    b.Property<int>("Location")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Appointment", "AlchemyCoaching");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClientId = "5bedddae-6d72-4538-aaab-0461e2ff2c75",
                            Coach = 0,
                            Location = 0,
                            Note = "nihil",
                            Time = new DateTime(2025, 5, 3, 7, 54, 18, 117, DateTimeKind.Unspecified).AddTicks(3842)
                        },
                        new
                        {
                            Id = 2,
                            ClientId = "bff1a9ce-5b3e-4762-9f87-679898fab278",
                            Coach = 0,
                            Location = 0,
                            Note = "Quo ex qui reprehenderit aut eaque maiores.",
                            Time = new DateTime(2025, 2, 20, 20, 5, 27, 286, DateTimeKind.Unspecified).AddTicks(1655)
                        },
                        new
                        {
                            Id = 3,
                            ClientId = "5bedddae-6d72-4538-aaab-0461e2ff2c75",
                            Coach = 0,
                            Location = 0,
                            Note = "In deleniti libero vero iusto dolor perspiciatis eos.\nOdit sed est magni animi et.\nVoluptatibus suscipit et sunt quia rerum eum dolor.\nEst quo esse.\nEa similique sed nemo mollitia.",
                            Time = new DateTime(2025, 4, 26, 10, 18, 23, 29, DateTimeKind.Unspecified).AddTicks(8769)
                        },
                        new
                        {
                            Id = 4,
                            ClientId = "bff1a9ce-5b3e-4762-9f87-679898fab278",
                            Coach = 0,
                            Location = 0,
                            Note = "Earum unde optio mollitia officia veniam id quam.",
                            Time = new DateTime(2025, 1, 31, 12, 6, 5, 478, DateTimeKind.Unspecified).AddTicks(5652)
                        },
                        new
                        {
                            Id = 5,
                            ClientId = "026107dd-c265-48dd-9118-ce8399e47315",
                            Coach = 0,
                            Location = 0,
                            Note = "Sint ipsa velit maiores.\nEt dolor exercitationem amet repellat ut.\nAut sed accusantium et quibusdam ut eos quo cumque quis.\nHic tempore rerum ipsa.",
                            Time = new DateTime(2025, 4, 13, 11, 27, 16, 141, DateTimeKind.Unspecified).AddTicks(1878)
                        },
                        new
                        {
                            Id = 6,
                            ClientId = "026107dd-c265-48dd-9118-ce8399e47315",
                            Coach = 0,
                            Location = 0,
                            Note = "Nemo consectetur quasi omnis et vitae molestias sed fugit.",
                            Time = new DateTime(2025, 1, 30, 14, 11, 3, 467, DateTimeKind.Unspecified).AddTicks(9709)
                        },
                        new
                        {
                            Id = 7,
                            ClientId = "bff1a9ce-5b3e-4762-9f87-679898fab278",
                            Coach = 0,
                            Location = 0,
                            Note = "Dolore quisquam debitis voluptatem pariatur consequatur perspiciatis.",
                            Time = new DateTime(2025, 5, 5, 3, 3, 25, 780, DateTimeKind.Unspecified).AddTicks(2351)
                        },
                        new
                        {
                            Id = 8,
                            ClientId = "2c073eab-8027-4b88-931f-80033082b0d9",
                            Coach = 0,
                            Location = 0,
                            Note = "Aliquid rem sed sequi unde quasi exercitationem cumque tenetur.",
                            Time = new DateTime(2025, 6, 20, 20, 48, 47, 933, DateTimeKind.Unspecified).AddTicks(162)
                        },
                        new
                        {
                            Id = 9,
                            ClientId = "a8a8a600-ec2e-4c52-aa1d-70e1b0de6cb8",
                            Coach = 0,
                            Location = 0,
                            Note = "Minus minima eius.",
                            Time = new DateTime(2025, 1, 8, 11, 48, 23, 827, DateTimeKind.Unspecified).AddTicks(7310)
                        },
                        new
                        {
                            Id = 10,
                            ClientId = "56644ae5-0f9b-4e28-be4e-3b06cb60457b",
                            Coach = 0,
                            Location = 0,
                            Note = "Deserunt nesciunt laboriosam maiores rem.",
                            Time = new DateTime(2025, 4, 5, 7, 25, 30, 783, DateTimeKind.Unspecified).AddTicks(883)
                        },
                        new
                        {
                            Id = 11,
                            ClientId = "026107dd-c265-48dd-9118-ce8399e47315",
                            Coach = 0,
                            Location = 0,
                            Note = "rerum",
                            Time = new DateTime(2025, 6, 11, 6, 4, 32, 608, DateTimeKind.Unspecified).AddTicks(9102)
                        },
                        new
                        {
                            Id = 12,
                            ClientId = "2c073eab-8027-4b88-931f-80033082b0d9",
                            Coach = 0,
                            Location = 0,
                            Note = "Voluptate nam eligendi consectetur. Blanditiis omnis beatae natus. Dolor delectus non sit. Sed exercitationem quos ea fuga et dolorem corrupti. Et cupiditate et consequuntur ad vitae architecto ut voluptas quasi. Sunt sit eos repellat hic inventore sunt aut illum.",
                            Time = new DateTime(2025, 3, 13, 0, 24, 7, 536, DateTimeKind.Unspecified).AddTicks(7412)
                        },
                        new
                        {
                            Id = 13,
                            ClientId = "470cdc87-5a39-41f5-a7fe-574f11d32c27",
                            Coach = 0,
                            Location = 0,
                            Note = "Velit distinctio commodi temporibus repellendus eaque adipisci maiores accusantium reiciendis. Delectus sapiente dolorum aspernatur maxime eos reiciendis rerum atque dolores. Ratione nam esse. Et qui rerum aliquid nesciunt quod qui. Dolorum quod voluptas occaecati non beatae odio in ea illum.",
                            Time = new DateTime(2025, 2, 11, 22, 49, 15, 633, DateTimeKind.Unspecified).AddTicks(5720)
                        },
                        new
                        {
                            Id = 14,
                            ClientId = "051ec062-149f-4280-9968-451ed0f27017",
                            Coach = 0,
                            Location = 0,
                            Note = "doloremque",
                            Time = new DateTime(2025, 6, 6, 22, 39, 23, 363, DateTimeKind.Unspecified).AddTicks(705)
                        },
                        new
                        {
                            Id = 15,
                            ClientId = "5bedddae-6d72-4538-aaab-0461e2ff2c75",
                            Coach = 0,
                            Location = 0,
                            Note = "Odit voluptate aliquid. Ratione voluptatibus dignissimos amet quisquam vel ut quis. Natus impedit quia et.",
                            Time = new DateTime(2025, 5, 27, 16, 48, 27, 633, DateTimeKind.Unspecified).AddTicks(5923)
                        },
                        new
                        {
                            Id = 16,
                            ClientId = "026107dd-c265-48dd-9118-ce8399e47315",
                            Coach = 0,
                            Location = 0,
                            Note = "placeat",
                            Time = new DateTime(2025, 5, 12, 21, 37, 32, 345, DateTimeKind.Unspecified).AddTicks(9574)
                        },
                        new
                        {
                            Id = 17,
                            ClientId = "051ec062-149f-4280-9968-451ed0f27017",
                            Coach = 0,
                            Location = 0,
                            Note = "Assumenda et necessitatibus quo sed illo qui est aspernatur dolores.\nCulpa id in quas ipsum ipsum qui illum ipsum.",
                            Time = new DateTime(2025, 3, 25, 22, 14, 54, 387, DateTimeKind.Unspecified).AddTicks(861)
                        },
                        new
                        {
                            Id = 18,
                            ClientId = "b51ecdc4-cf9e-403d-89ff-c8ce3f9f137b",
                            Coach = 0,
                            Location = 0,
                            Note = "Laboriosam quod autem rerum dolores aut.",
                            Time = new DateTime(2025, 6, 12, 23, 21, 40, 865, DateTimeKind.Unspecified).AddTicks(2675)
                        },
                        new
                        {
                            Id = 19,
                            ClientId = "5bedddae-6d72-4538-aaab-0461e2ff2c75",
                            Coach = 0,
                            Location = 0,
                            Note = "Debitis deleniti vel ipsam dolore necessitatibus qui nobis doloremque omnis.",
                            Time = new DateTime(2025, 1, 6, 3, 7, 54, 357, DateTimeKind.Unspecified).AddTicks(1468)
                        },
                        new
                        {
                            Id = 20,
                            ClientId = "b51ecdc4-cf9e-403d-89ff-c8ce3f9f137b",
                            Coach = 0,
                            Location = 0,
                            Note = "Explicabo possimus cumque nisi ut iure qui. Aspernatur aut ipsa dolorem. Placeat sunt dignissimos voluptatem at autem. Velit esse esse impedit alias ea magnam blanditiis et iste. Officiis eum debitis voluptatum aut alias dolorem consequuntur ut. Voluptatem voluptatibus vel quaerat.",
                            Time = new DateTime(2025, 3, 23, 5, 2, 45, 948, DateTimeKind.Unspecified).AddTicks(7894)
                        },
                        new
                        {
                            Id = 21,
                            ClientId = "051ec062-149f-4280-9968-451ed0f27017",
                            Coach = 0,
                            Location = 0,
                            Note = "Nam facere nemo perferendis sequi inventore sit harum voluptate.",
                            Time = new DateTime(2025, 6, 22, 21, 48, 53, 177, DateTimeKind.Unspecified).AddTicks(2818)
                        },
                        new
                        {
                            Id = 22,
                            ClientId = "bff1a9ce-5b3e-4762-9f87-679898fab278",
                            Coach = 0,
                            Location = 0,
                            Note = "Voluptas quisquam provident.",
                            Time = new DateTime(2025, 4, 2, 6, 27, 22, 974, DateTimeKind.Unspecified).AddTicks(5977)
                        },
                        new
                        {
                            Id = 23,
                            ClientId = "026107dd-c265-48dd-9118-ce8399e47315",
                            Coach = 0,
                            Location = 0,
                            Note = "Quidem culpa non voluptas dolorem vel consequatur nobis et. Dolorem maxime sed sit. Sit excepturi corrupti dolores doloremque at. Repellendus nulla non quasi provident laboriosam qui reprehenderit asperiores. Autem commodi blanditiis adipisci voluptatem dignissimos fuga et dolores est. Quis aut et.",
                            Time = new DateTime(2025, 5, 11, 7, 47, 58, 499, DateTimeKind.Unspecified).AddTicks(6931)
                        },
                        new
                        {
                            Id = 24,
                            ClientId = "5bedddae-6d72-4538-aaab-0461e2ff2c75",
                            Coach = 0,
                            Location = 0,
                            Note = "Est dolorem ipsa.\nAut facilis aliquam eius quis.\nCulpa architecto sint aut.\nSit eligendi dicta.\nQui dolore eveniet et animi ea ut dolores doloremque unde.",
                            Time = new DateTime(2025, 3, 25, 11, 12, 18, 943, DateTimeKind.Unspecified).AddTicks(4068)
                        },
                        new
                        {
                            Id = 25,
                            ClientId = "026107dd-c265-48dd-9118-ce8399e47315",
                            Coach = 0,
                            Location = 0,
                            Note = "Quis consequatur ut doloribus harum sequi est non. Voluptatem et dolores voluptatum nihil dicta. Ut qui blanditiis aut sit vel qui in et at. Nihil minus ab quaerat pariatur non animi dicta rerum. Aut rerum et unde nam.",
                            Time = new DateTime(2025, 2, 18, 5, 40, 59, 893, DateTimeKind.Unspecified).AddTicks(9599)
                        },
                        new
                        {
                            Id = 26,
                            ClientId = "56644ae5-0f9b-4e28-be4e-3b06cb60457b",
                            Coach = 0,
                            Location = 0,
                            Note = "Ut ullam sequi. Dignissimos debitis natus ut cumque qui aut qui. Minus dolores culpa inventore magni eveniet.",
                            Time = new DateTime(2025, 6, 26, 16, 8, 38, 925, DateTimeKind.Unspecified).AddTicks(336)
                        },
                        new
                        {
                            Id = 27,
                            ClientId = "bff1a9ce-5b3e-4762-9f87-679898fab278",
                            Coach = 0,
                            Location = 0,
                            Note = "est",
                            Time = new DateTime(2025, 2, 19, 0, 20, 58, 763, DateTimeKind.Unspecified).AddTicks(5873)
                        },
                        new
                        {
                            Id = 28,
                            ClientId = "051ec062-149f-4280-9968-451ed0f27017",
                            Coach = 0,
                            Location = 0,
                            Note = "Quo facere vero et sint autem eius ut corporis commodi.\nDolores dolor voluptate consequatur vero.\nEnim dolorem doloribus iure consectetur veniam modi eveniet sapiente consequuntur.\nEum et iste qui ut sint repudiandae corrupti qui.",
                            Time = new DateTime(2025, 4, 7, 7, 44, 3, 11, DateTimeKind.Unspecified).AddTicks(1954)
                        },
                        new
                        {
                            Id = 29,
                            ClientId = "051ec062-149f-4280-9968-451ed0f27017",
                            Coach = 0,
                            Location = 0,
                            Note = "Voluptate qui laudantium officiis eius quia tenetur. Sit velit perferendis. Ipsum voluptatem eaque. Minima ab qui et et sequi laborum. Quia explicabo quia minus eveniet explicabo esse. At est maiores id.",
                            Time = new DateTime(2025, 2, 28, 2, 20, 9, 305, DateTimeKind.Unspecified).AddTicks(7577)
                        },
                        new
                        {
                            Id = 30,
                            ClientId = "bff1a9ce-5b3e-4762-9f87-679898fab278",
                            Coach = 0,
                            Location = 0,
                            Note = "Illo odio voluptatem magni repudiandae et provident itaque rerum.",
                            Time = new DateTime(2025, 5, 10, 7, 13, 55, 368, DateTimeKind.Unspecified).AddTicks(3760)
                        });
                });

            modelBuilder.Entity("ClientPortal.Server.Entities.PortalUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", "AlchemyCoaching");

                    b.HasData(
                        new
                        {
                            Id = "40aedae8-36a2-4977-9867-860d5bcbbd0f",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "a5e07f1d-d429-4946-a508-7cd3a3852b18",
                            Email = "Lewis49@email.com",
                            EmailConfirmed = false,
                            FirstName = "Lewis",
                            LastName = "Hahn",
                            LockoutEnabled = false,
                            NormalizedEmail = "lewis49@email.com",
                            NormalizedUserName = "lewis49@email.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEAV9uC4NYgiLnVcGdugOFh1zEAX8InTB1j7oSlu9LZnkxeln1bYleCUntedPzQF8GQ==",
                            PhoneNumberConfirmed = false,
                            Role = 0,
                            SecurityStamp = "e1174328-55f7-4f9f-84da-c440af329ca7",
                            TwoFactorEnabled = false,
                            UserName = "lewis49@email.com"
                        },
                        new
                        {
                            Id = "b51ecdc4-cf9e-403d-89ff-c8ce3f9f137b",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "33d4c9ff-f2ac-47ce-bc4b-a88a32f4e745",
                            Email = "Jessie_Mueller@email.com",
                            EmailConfirmed = false,
                            FirstName = "Jessie",
                            LastName = "Mueller",
                            LockoutEnabled = false,
                            NormalizedEmail = "jessie_mueller@email.com",
                            NormalizedUserName = "jessie_mueller@email.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEMkbLj6yZzTJHEH/ybLFBu/anHRmfma5E/875Fm3AyC9Fab0pRkpVvEND5PHBevaFw==",
                            PhoneNumberConfirmed = false,
                            Role = 0,
                            SecurityStamp = "87269f4f-0ad6-4880-ac0a-a691a8f82567",
                            TwoFactorEnabled = false,
                            UserName = "jessie_mueller@email.com"
                        },
                        new
                        {
                            Id = "2c073eab-8027-4b88-931f-80033082b0d9",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "c3a8128d-9a90-4837-89f3-2150ed17c6e8",
                            Email = "Silvia.Ward59@email.com",
                            EmailConfirmed = false,
                            FirstName = "Silvia",
                            LastName = "Ward",
                            LockoutEnabled = false,
                            NormalizedEmail = "silvia.ward59@email.com",
                            NormalizedUserName = "silvia.ward59@email.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEMIOeiRnP8R0aJufUJMl2JwFA9Yphg/Vn2FIlPSxs0j/bmMZS/vRUcO3KwK2EIyf8w==",
                            PhoneNumberConfirmed = false,
                            Role = 0,
                            SecurityStamp = "6d43003b-b53f-471c-9342-200e864c83db",
                            TwoFactorEnabled = false,
                            UserName = "silvia.ward59@email.com"
                        },
                        new
                        {
                            Id = "5bedddae-6d72-4538-aaab-0461e2ff2c75",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "1f1d6442-a5d3-49c3-b36d-79979e0814fe",
                            Email = "Bryant_OConnell@email.com",
                            EmailConfirmed = false,
                            FirstName = "Bryant",
                            LastName = "O'Connell",
                            LockoutEnabled = false,
                            NormalizedEmail = "bryant_oconnell@email.com",
                            NormalizedUserName = "bryant_oconnell@email.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEK8Q8ii9bL1g0ZHRBrMcrx86DqZRDaXZdWdpNgLBo3buqG+4szYk35J9UxUeDMl8zw==",
                            PhoneNumberConfirmed = false,
                            Role = 0,
                            SecurityStamp = "b786d036-bd50-47aa-908a-c3acfeaea711",
                            TwoFactorEnabled = false,
                            UserName = "bryant_oconnell@email.com"
                        },
                        new
                        {
                            Id = "bff1a9ce-5b3e-4762-9f87-679898fab278",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "c4b62ea6-cbaa-4688-aabe-04c87dddf917",
                            Email = "Vivian_Johnson33@email.com",
                            EmailConfirmed = false,
                            FirstName = "Vivian",
                            LastName = "Johnson",
                            LockoutEnabled = false,
                            NormalizedEmail = "vivian_johnson33@email.com",
                            NormalizedUserName = "vivian_johnson33@email.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEGWPwnpyMrh201hBZvAXNcwQ+UMf1QENKjLsfmhgx3JwxkOEqVw+/sWNeakQH1Y1RA==",
                            PhoneNumberConfirmed = false,
                            Role = 0,
                            SecurityStamp = "f02668b9-d891-4142-b1fc-a0d47d3f6114",
                            TwoFactorEnabled = false,
                            UserName = "vivian_johnson33@email.com"
                        },
                        new
                        {
                            Id = "051ec062-149f-4280-9968-451ed0f27017",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "83b91b71-e29a-43e4-831d-24bbae89b5b1",
                            Email = "Anthony35@email.com",
                            EmailConfirmed = false,
                            FirstName = "Anthony",
                            LastName = "Simonis",
                            LockoutEnabled = false,
                            NormalizedEmail = "anthony35@email.com",
                            NormalizedUserName = "anthony35@email.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEP9mZyMjRlQdIJ+6aMX+RUfO8RWfKVaPuhMbZK+uzDjl7bdWVzutiH8ZhmcoLdotXQ==",
                            PhoneNumberConfirmed = false,
                            Role = 0,
                            SecurityStamp = "af4d27eb-5981-41eb-b501-e20d22e5568d",
                            TwoFactorEnabled = false,
                            UserName = "anthony35@email.com"
                        },
                        new
                        {
                            Id = "470cdc87-5a39-41f5-a7fe-574f11d32c27",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "31a460fd-2d07-4693-bb06-af9212b7a2c2",
                            Email = "Austin97@email.com",
                            EmailConfirmed = false,
                            FirstName = "Austin",
                            LastName = "Hoppe",
                            LockoutEnabled = false,
                            NormalizedEmail = "austin97@email.com",
                            NormalizedUserName = "austin97@email.com",
                            PasswordHash = "AQAAAAIAAYagAAAAECALyEKT+KsSPRTZEzvIXlY9eEIj6dcEUWx2eBSj5bKkifHBd+YOCeW6vM/6gHaqxA==",
                            PhoneNumberConfirmed = false,
                            Role = 0,
                            SecurityStamp = "6aeee979-de1d-4139-8f0f-0b980f0a0f28",
                            TwoFactorEnabled = false,
                            UserName = "austin97@email.com"
                        },
                        new
                        {
                            Id = "56644ae5-0f9b-4e28-be4e-3b06cb60457b",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "56a3eda7-9e83-4705-810b-0e89d3a1f85d",
                            Email = "Lauren.Shields74@email.com",
                            EmailConfirmed = false,
                            FirstName = "Lauren",
                            LastName = "Shields",
                            LockoutEnabled = false,
                            NormalizedEmail = "lauren.shields74@email.com",
                            NormalizedUserName = "lauren.shields74@email.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEOSdmceLrk3B949f5c2L8M1iposFiUOUNobn2H5oSjOXm4862ljbbp8YXvTO5w6MHA==",
                            PhoneNumberConfirmed = false,
                            Role = 0,
                            SecurityStamp = "f28cd6a1-4c22-4d6e-abdb-76a689b94ec1",
                            TwoFactorEnabled = false,
                            UserName = "lauren.shields74@email.com"
                        },
                        new
                        {
                            Id = "a8a8a600-ec2e-4c52-aa1d-70e1b0de6cb8",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "8ed7b4e0-71d8-4bd6-a862-4c72cdea9b7f",
                            Email = "Jorge_Nicolas@email.com",
                            EmailConfirmed = false,
                            FirstName = "Jorge",
                            LastName = "Nicolas",
                            LockoutEnabled = false,
                            NormalizedEmail = "jorge_nicolas@email.com",
                            NormalizedUserName = "jorge_nicolas@email.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEGWjEGCMUwczwvycMziTXjIn26b4/uTfURrxe0YRIwqpCBpeObTz8QY9VbRdbK8OIg==",
                            PhoneNumberConfirmed = false,
                            Role = 0,
                            SecurityStamp = "06d6703e-273c-49c0-8b9b-0d404073fb67",
                            TwoFactorEnabled = false,
                            UserName = "jorge_nicolas@email.com"
                        },
                        new
                        {
                            Id = "026107dd-c265-48dd-9118-ce8399e47315",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "4e698b25-92c7-4a7e-9a72-7a15d715301c",
                            Email = "Charlene.Kub68@email.com",
                            EmailConfirmed = false,
                            FirstName = "Charlene",
                            LastName = "Kub",
                            LockoutEnabled = false,
                            NormalizedEmail = "charlene.kub68@email.com",
                            NormalizedUserName = "charlene.kub68@email.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEMguQb+ra+NC9eMAfRVG9IUPtSOczN9Va2e5rCDlgerpOkNEcbpjoBxwJaP2YdgOIw==",
                            PhoneNumberConfirmed = false,
                            Role = 0,
                            SecurityStamp = "95f6f764-667c-47a4-a5a0-3138dd82d69a",
                            TwoFactorEnabled = false,
                            UserName = "charlene.kub68@email.com"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", "AlchemyCoaching");

                    b.HasData(
                        new
                        {
                            Id = "d20c16e7-48c7-438f-97c4-c5587216c884",
                            Name = "Client",
                            NormalizedName = "CLIENT"
                        },
                        new
                        {
                            Id = "832227a6-1a9d-479d-b276-1df539980696",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", "AlchemyCoaching");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", "AlchemyCoaching");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", "AlchemyCoaching");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", "AlchemyCoaching");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", "AlchemyCoaching");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("ClientPortal.Server.Entities.PortalUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("ClientPortal.Server.Entities.PortalUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClientPortal.Server.Entities.PortalUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("ClientPortal.Server.Entities.PortalUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}

// <auto-generated />
using System;
using AlchemyCoaching.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AlchemyCoaching.Server.Migrations
{
    [DbContext(typeof(DemoDbContext))]
    partial class DemoDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("AlchemyCoaching")
                .HasAnnotation("ProductVersion", "8.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ClientPortal.Server.Entities.Appointment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Coach")
                        .HasColumnType("int");

                    b.Property<int>("Location")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Appointment", "AlchemyCoaching");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClientId = "0f3d69cb-418e-4810-b56b-152226572cf3",
                            Coach = 0,
                            Location = 0,
                            Note = "Ut tempora sit rerum corporis.\nVoluptatem dolores quia quos officia voluptate temporibus.\nAsperiores nemo fugiat facilis reprehenderit ab.",
                            Time = new DateTime(2025, 11, 7, 0, 44, 2, 220, DateTimeKind.Unspecified).AddTicks(1834)
                        },
                        new
                        {
                            Id = 2,
                            ClientId = "662ee75a-277e-45e9-b435-52b5f4dfd9c6",
                            Coach = 0,
                            Location = 0,
                            Note = "Et animi voluptate nihil aut impedit nobis.\nSimilique voluptatem tempore et molestiae error.\nDolore sunt suscipit in.\nQuasi dolor aperiam modi similique tempore qui est.",
                            Time = new DateTime(2025, 8, 19, 1, 33, 5, 990, DateTimeKind.Unspecified).AddTicks(9214)
                        },
                        new
                        {
                            Id = 3,
                            ClientId = "24d787eb-988d-48fa-997a-d051ceb30443",
                            Coach = 0,
                            Location = 0,
                            Note = "Nam ex tenetur eos dolor exercitationem non molestias tempore. Tenetur aut distinctio consequatur asperiores. Illo aut provident sunt saepe sequi. Labore ad nostrum qui maxime aliquam. Aspernatur repellendus qui. Illo corporis occaecati odit repellat voluptatum recusandae eum.",
                            Time = new DateTime(2025, 10, 2, 16, 50, 18, 792, DateTimeKind.Unspecified).AddTicks(8219)
                        },
                        new
                        {
                            Id = 4,
                            ClientId = "662ee75a-277e-45e9-b435-52b5f4dfd9c6",
                            Coach = 0,
                            Location = 0,
                            Note = "Iure tempora qui fuga magni hic facilis fugiat et quo.\nDicta doloremque qui autem amet molestiae.\nUt suscipit quaerat inventore eum incidunt natus rerum quaerat.\nOfficia quia qui fugiat et dignissimos.\nSoluta numquam aliquid exercitationem est doloremque voluptatem labore aperiam blanditiis.",
                            Time = new DateTime(2025, 1, 7, 5, 6, 14, 866, DateTimeKind.Unspecified).AddTicks(4851)
                        },
                        new
                        {
                            Id = 5,
                            ClientId = "22a759bf-3ec9-457f-936f-92ac29a9a4c0",
                            Coach = 0,
                            Location = 0,
                            Note = "Quae expedita repudiandae a. Et aut dolor ut vitae dolor atque incidunt. Dolor omnis quam voluptatem minus nihil ut praesentium. Odit cumque iusto aut vitae unde possimus ad consequatur est.",
                            Time = new DateTime(2025, 3, 26, 5, 33, 42, 326, DateTimeKind.Unspecified).AddTicks(493)
                        },
                        new
                        {
                            Id = 6,
                            ClientId = "22a759bf-3ec9-457f-936f-92ac29a9a4c0",
                            Coach = 0,
                            Location = 0,
                            Note = "Qui cumque enim.\nMaiores totam iste nobis natus officia.\nIn reprehenderit dolores veniam.\nEst eligendi voluptatem nisi cupiditate quam nobis qui illo.",
                            Time = new DateTime(2025, 5, 25, 9, 43, 26, 849, DateTimeKind.Unspecified).AddTicks(5807)
                        },
                        new
                        {
                            Id = 7,
                            ClientId = "662ee75a-277e-45e9-b435-52b5f4dfd9c6",
                            Coach = 0,
                            Location = 0,
                            Note = "consequatur",
                            Time = new DateTime(2025, 6, 26, 10, 41, 47, 747, DateTimeKind.Unspecified).AddTicks(1068)
                        },
                        new
                        {
                            Id = 8,
                            ClientId = "0f3d69cb-418e-4810-b56b-152226572cf3",
                            Coach = 0,
                            Location = 0,
                            Note = "Nostrum non iusto accusamus libero sunt vel sit.\nEx voluptatem rerum voluptatem.\nAutem eum modi ipsa reprehenderit sit deleniti et.\nFacere ducimus maxime eum quo.\nAtque vel reprehenderit dolores distinctio quasi et harum.\nReiciendis aut quo quibusdam fuga ea modi dolore non.",
                            Time = new DateTime(2025, 3, 12, 4, 37, 27, 410, DateTimeKind.Unspecified).AddTicks(8201)
                        },
                        new
                        {
                            Id = 9,
                            ClientId = "cf11da01-c496-4ecf-bc14-4797ef095626",
                            Coach = 0,
                            Location = 0,
                            Note = "Consequuntur dolores est nemo eaque nemo.",
                            Time = new DateTime(2025, 1, 14, 2, 51, 2, 211, DateTimeKind.Unspecified).AddTicks(7190)
                        },
                        new
                        {
                            Id = 10,
                            ClientId = "662ee75a-277e-45e9-b435-52b5f4dfd9c6",
                            Coach = 0,
                            Location = 0,
                            Note = "occaecati",
                            Time = new DateTime(2025, 6, 25, 13, 22, 10, 69, DateTimeKind.Unspecified).AddTicks(466)
                        },
                        new
                        {
                            Id = 11,
                            ClientId = "819ef490-7486-4d9b-9e1d-2b4b6f81cb5c",
                            Coach = 0,
                            Location = 0,
                            Note = "Ut dolorem optio dolore est nihil facilis in explicabo.\nCommodi et sit assumenda temporibus tempora.\nEt quos dignissimos et veniam.\nHarum aut et quisquam adipisci modi.\nEt deserunt facere vitae impedit.",
                            Time = new DateTime(2025, 10, 9, 12, 27, 0, 790, DateTimeKind.Unspecified).AddTicks(6489)
                        },
                        new
                        {
                            Id = 12,
                            ClientId = "7030506a-b1d8-45c9-a581-3950f3f74bbe",
                            Coach = 0,
                            Location = 0,
                            Note = "officiis",
                            Time = new DateTime(2025, 9, 25, 0, 34, 53, 927, DateTimeKind.Unspecified).AddTicks(4212)
                        },
                        new
                        {
                            Id = 13,
                            ClientId = "22a759bf-3ec9-457f-936f-92ac29a9a4c0",
                            Coach = 0,
                            Location = 0,
                            Note = "Ab et occaecati. Ipsum assumenda aut. Et doloribus ut aut labore quo asperiores et. Dolorem et doloribus soluta et eum omnis vel eaque eum. Architecto quod et enim voluptatem excepturi sint vel consequatur vitae. Architecto sed natus natus totam.",
                            Time = new DateTime(2025, 6, 29, 3, 4, 59, 661, DateTimeKind.Unspecified).AddTicks(8006)
                        },
                        new
                        {
                            Id = 14,
                            ClientId = "24d787eb-988d-48fa-997a-d051ceb30443",
                            Coach = 0,
                            Location = 0,
                            Note = "Quam velit quia id et qui distinctio repellendus ut.\nAliquid animi qui cupiditate quis.\nAssumenda sunt nostrum qui vitae eaque aperiam perferendis saepe.\nVoluptatem dolor non possimus aliquam.\nNon dolorem velit minus culpa omnis modi.",
                            Time = new DateTime(2025, 11, 18, 15, 46, 42, 45, DateTimeKind.Unspecified).AddTicks(5065)
                        },
                        new
                        {
                            Id = 15,
                            ClientId = "f9be045b-3249-4c04-b9f3-5dd92a44567b",
                            Coach = 0,
                            Location = 0,
                            Note = "Quos deserunt quidem.",
                            Time = new DateTime(2025, 12, 24, 13, 27, 35, 116, DateTimeKind.Unspecified).AddTicks(7303)
                        },
                        new
                        {
                            Id = 16,
                            ClientId = "662ee75a-277e-45e9-b435-52b5f4dfd9c6",
                            Coach = 0,
                            Location = 0,
                            Note = "Officia voluptate maiores.\nSaepe ullam fuga vero et quae atque.\nFacilis consequatur incidunt voluptas.\nIpsam error voluptatem mollitia commodi et.",
                            Time = new DateTime(2025, 3, 28, 20, 41, 25, 846, DateTimeKind.Unspecified).AddTicks(6144)
                        },
                        new
                        {
                            Id = 17,
                            ClientId = "cf11da01-c496-4ecf-bc14-4797ef095626",
                            Coach = 0,
                            Location = 0,
                            Note = "Totam molestiae deserunt earum voluptates atque atque sunt. Possimus sit iste necessitatibus accusamus aut nesciunt. Dolor necessitatibus officiis in adipisci velit aut esse alias est.",
                            Time = new DateTime(2025, 10, 17, 22, 1, 38, 648, DateTimeKind.Unspecified).AddTicks(1387)
                        },
                        new
                        {
                            Id = 18,
                            ClientId = "22a759bf-3ec9-457f-936f-92ac29a9a4c0",
                            Coach = 0,
                            Location = 0,
                            Note = "Omnis corporis iste possimus quae molestiae.",
                            Time = new DateTime(2025, 2, 7, 7, 21, 0, 682, DateTimeKind.Unspecified).AddTicks(8076)
                        },
                        new
                        {
                            Id = 19,
                            ClientId = "f4db7fc8-ca9f-429e-a87a-f782be825b63",
                            Coach = 0,
                            Location = 0,
                            Note = "Quod quisquam eos veniam.",
                            Time = new DateTime(2025, 1, 10, 6, 59, 39, 524, DateTimeKind.Unspecified).AddTicks(9803)
                        },
                        new
                        {
                            Id = 20,
                            ClientId = "f4db7fc8-ca9f-429e-a87a-f782be825b63",
                            Coach = 0,
                            Location = 0,
                            Note = "qui",
                            Time = new DateTime(2025, 5, 23, 15, 0, 39, 523, DateTimeKind.Unspecified).AddTicks(5410)
                        },
                        new
                        {
                            Id = 21,
                            ClientId = "662ee75a-277e-45e9-b435-52b5f4dfd9c6",
                            Coach = 0,
                            Location = 0,
                            Note = "Dolorem beatae quos distinctio dolorem et necessitatibus quas cumque.",
                            Time = new DateTime(2025, 7, 3, 6, 39, 36, 875, DateTimeKind.Unspecified).AddTicks(9816)
                        },
                        new
                        {
                            Id = 22,
                            ClientId = "f4db7fc8-ca9f-429e-a87a-f782be825b63",
                            Coach = 0,
                            Location = 0,
                            Note = "Dolores nihil quia consectetur magnam et deleniti pariatur vel esse.\nRecusandae voluptate sint cum tempora consequatur aperiam ratione placeat eos.\nUt eaque voluptatibus ut voluptas ducimus voluptatem id porro.\nHic eos nam cumque perferendis libero veritatis.",
                            Time = new DateTime(2025, 7, 28, 16, 47, 57, 524, DateTimeKind.Unspecified).AddTicks(2622)
                        },
                        new
                        {
                            Id = 23,
                            ClientId = "0f3d69cb-418e-4810-b56b-152226572cf3",
                            Coach = 0,
                            Location = 0,
                            Note = "Odio voluptas dolore a.\nIpsum itaque aut ipsa.\nNon ut sunt.\nVoluptates dolor consequuntur omnis sint natus.\nNon fugiat aliquid omnis et officia ipsum at et.\nQui quam sunt eos voluptates nihil dolore est.",
                            Time = new DateTime(2025, 11, 4, 18, 32, 19, 873, DateTimeKind.Unspecified).AddTicks(8497)
                        },
                        new
                        {
                            Id = 24,
                            ClientId = "f9be045b-3249-4c04-b9f3-5dd92a44567b",
                            Coach = 0,
                            Location = 0,
                            Note = "Perferendis eaque cumque culpa suscipit accusantium.",
                            Time = new DateTime(2025, 1, 22, 22, 28, 59, 8, DateTimeKind.Unspecified).AddTicks(4384)
                        },
                        new
                        {
                            Id = 25,
                            ClientId = "819ef490-7486-4d9b-9e1d-2b4b6f81cb5c",
                            Coach = 0,
                            Location = 0,
                            Note = "Vel alias nesciunt maiores dolores vel explicabo sit consectetur. Quia ab voluptatem at voluptas vel dolores aut. Magni est quis quaerat doloremque voluptatem non enim voluptatem ex. Nobis accusamus voluptatem id suscipit consequatur ut sint.",
                            Time = new DateTime(2025, 1, 14, 21, 10, 0, 443, DateTimeKind.Unspecified).AddTicks(6607)
                        },
                        new
                        {
                            Id = 26,
                            ClientId = "819ef490-7486-4d9b-9e1d-2b4b6f81cb5c",
                            Coach = 0,
                            Location = 0,
                            Note = "ut",
                            Time = new DateTime(2025, 3, 29, 7, 56, 40, 953, DateTimeKind.Unspecified).AddTicks(5323)
                        },
                        new
                        {
                            Id = 27,
                            ClientId = "819ef490-7486-4d9b-9e1d-2b4b6f81cb5c",
                            Coach = 0,
                            Location = 0,
                            Note = "Illo architecto sunt in voluptas.",
                            Time = new DateTime(2025, 6, 28, 1, 20, 44, 244, DateTimeKind.Unspecified).AddTicks(6701)
                        },
                        new
                        {
                            Id = 28,
                            ClientId = "cf11da01-c496-4ecf-bc14-4797ef095626",
                            Coach = 0,
                            Location = 0,
                            Note = "Excepturi a iusto autem dolorum sint veniam mollitia ut.",
                            Time = new DateTime(2025, 10, 29, 16, 46, 14, 482, DateTimeKind.Unspecified).AddTicks(5543)
                        },
                        new
                        {
                            Id = 29,
                            ClientId = "7030506a-b1d8-45c9-a581-3950f3f74bbe",
                            Coach = 0,
                            Location = 0,
                            Note = "Omnis exercitationem voluptas maiores enim perferendis assumenda id harum ratione. Magnam enim molestiae. Sed vel eligendi. A facilis sit veniam. Nobis nobis ullam exercitationem expedita et ut.",
                            Time = new DateTime(2025, 5, 29, 2, 39, 29, 77, DateTimeKind.Unspecified).AddTicks(5525)
                        },
                        new
                        {
                            Id = 30,
                            ClientId = "24d787eb-988d-48fa-997a-d051ceb30443",
                            Coach = 0,
                            Location = 0,
                            Note = "Enim ut tempora.\nOmnis voluptatem nihil voluptas rerum ipsa atque enim veniam.\nEt animi et amet assumenda.\nConsequatur ut nemo sapiente ullam inventore molestiae.\nEt sint est omnis placeat.",
                            Time = new DateTime(2025, 7, 11, 3, 7, 49, 287, DateTimeKind.Unspecified).AddTicks(3725)
                        });
                });

            modelBuilder.Entity("ClientPortal.Server.Entities.PortalUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", "AlchemyCoaching");

                    b.HasData(
                        new
                        {
                            Id = "cc74c0ab-64de-4626-b9df-a8031a24cb41",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "aa28abe9-eb97-423b-b30f-e7656ea9853b",
                            Email = "Bobbie66@email.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Bobbie",
                            NormalizedEmail = "bobbie66@email.com",
                            NormalizedUserName = "bobbie66@email.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEL6J4gFyKOV43XUjGjYPb/UpllRZxV2Hy0sipPHr17G1lJkXtBiBsx5WAMce++brbA==",
                            PhoneNumberConfirmed = false,
                            Role = 0,
                            SecurityStamp = "a94005dd-d071-4457-ac0a-165135b26b74",
                            TwoFactorEnabled = false,
                            UserName = "bobbie66@email.com"
                        },
                        new
                        {
                            Id = "24d787eb-988d-48fa-997a-d051ceb30443",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "28886f9d-76c7-48d7-9913-a5bb0cbae805",
                            Email = "Jake.Tillman@email.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Jake",
                            NormalizedEmail = "jake.tillman@email.com",
                            NormalizedUserName = "jake.tillman@email.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEDxhS2xIwv2spfHYSiNz4d0rQhKOfj7gkQA5XvK/0i6opPiJCtBvhM7WBSPXlr4f4Q==",
                            PhoneNumberConfirmed = false,
                            Role = 0,
                            SecurityStamp = "8a8bb477-4ee8-4089-b9b5-a6dd725fc12f",
                            TwoFactorEnabled = false,
                            UserName = "jake.tillman@email.com"
                        },
                        new
                        {
                            Id = "7030506a-b1d8-45c9-a581-3950f3f74bbe",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "7c2f761d-d0f9-45d2-a9a7-dc3dee799401",
                            Email = "Edwin.Zboncak@email.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Edwin",
                            NormalizedEmail = "edwin.zboncak@email.com",
                            NormalizedUserName = "edwin.zboncak@email.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEB/HAREkc+zv0jNINJWoEY8nNwTlyO3Wsz3no2h5yVSrlSD3cPHC0CnUOW3tJyyzyA==",
                            PhoneNumberConfirmed = false,
                            Role = 0,
                            SecurityStamp = "bca2fede-6eb6-430e-b5da-b9b9efe96660",
                            TwoFactorEnabled = false,
                            UserName = "edwin.zboncak@email.com"
                        },
                        new
                        {
                            Id = "819ef490-7486-4d9b-9e1d-2b4b6f81cb5c",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "ef356099-d159-43cb-bf2c-164706af4039",
                            Email = "Tracy64@email.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Tracy",
                            NormalizedEmail = "tracy64@email.com",
                            NormalizedUserName = "tracy64@email.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEO5al1vQ0wSw+vdOHt3YLMvRGbptRCcmpakNvkq+G6iIATGOEvu+1Ag8MblBtgkn+Q==",
                            PhoneNumberConfirmed = false,
                            Role = 0,
                            SecurityStamp = "b16da18b-c4b3-4f2d-b2cc-41d5baa35fa4",
                            TwoFactorEnabled = false,
                            UserName = "tracy64@email.com"
                        },
                        new
                        {
                            Id = "662ee75a-277e-45e9-b435-52b5f4dfd9c6",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "336ac572-c72c-46b8-a213-19753cc944ad",
                            Email = "Courtney6@email.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Courtney",
                            NormalizedEmail = "courtney6@email.com",
                            NormalizedUserName = "courtney6@email.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEGwfFCaKZd2IWH4TjI4jbDGExX1ZVEdCqX1BpWjiczgOfr3QUcvn2Ofdpvp2Gs/ijQ==",
                            PhoneNumberConfirmed = false,
                            Role = 0,
                            SecurityStamp = "dcecf067-cc1f-416e-900a-cdc33aeb7ba2",
                            TwoFactorEnabled = false,
                            UserName = "courtney6@email.com"
                        },
                        new
                        {
                            Id = "f9be045b-3249-4c04-b9f3-5dd92a44567b",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "af5b2b11-a3f5-4721-8099-10a0a1c3efb5",
                            Email = "Gabriel56@email.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Gabriel",
                            NormalizedEmail = "gabriel56@email.com",
                            NormalizedUserName = "gabriel56@email.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEOb7MqsB49xlq1OwDMvbZlgSvGnHJR6010FwGmOSI1xLM7Fsm/h7tYZP1gmJxE0fcQ==",
                            PhoneNumberConfirmed = false,
                            Role = 0,
                            SecurityStamp = "9587989f-1166-4aa1-8980-e90423233c98",
                            TwoFactorEnabled = false,
                            UserName = "gabriel56@email.com"
                        },
                        new
                        {
                            Id = "0f3d69cb-418e-4810-b56b-152226572cf3",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "4bc90bf9-4961-4333-85bd-b8ee9c00dc70",
                            Email = "Rufus54@email.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Rufus",
                            NormalizedEmail = "rufus54@email.com",
                            NormalizedUserName = "rufus54@email.com",
                            PasswordHash = "AQAAAAIAAYagAAAAED7V13D1pOPpvHX7oYAgqo3q9XASSCI6Nh0/9ZQPFho3AXSy+gwA6TKfN3zvW4iXhQ==",
                            PhoneNumberConfirmed = false,
                            Role = 0,
                            SecurityStamp = "da1dcc35-c100-4cbf-a02d-d773bf16390d",
                            TwoFactorEnabled = false,
                            UserName = "rufus54@email.com"
                        },
                        new
                        {
                            Id = "f4db7fc8-ca9f-429e-a87a-f782be825b63",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "2cea5f10-149c-4a3e-bf22-a1b7d091c387",
                            Email = "Wayne11@email.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Wayne",
                            NormalizedEmail = "wayne11@email.com",
                            NormalizedUserName = "wayne11@email.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEL5dwWZilhgF2JO8Q4FJ8bq5cklzRmMjt8CqAYFnKXSvNMmUm02PVS0tG+M7mGOzMw==",
                            PhoneNumberConfirmed = false,
                            Role = 0,
                            SecurityStamp = "41944c9a-af50-4968-9e76-2ba95efc6abd",
                            TwoFactorEnabled = false,
                            UserName = "wayne11@email.com"
                        },
                        new
                        {
                            Id = "22a759bf-3ec9-457f-936f-92ac29a9a4c0",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "d2ac754f-6af4-406a-87f9-dfa00756cdbf",
                            Email = "Joanna15@email.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Joanna",
                            NormalizedEmail = "joanna15@email.com",
                            NormalizedUserName = "joanna15@email.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEGz/Y+kEZORn3Bx6bFimiKuE+7thQZ5c+82GNSIFSAYKyPUCO7/Wq7Flr2nC4BHw9g==",
                            PhoneNumberConfirmed = false,
                            Role = 0,
                            SecurityStamp = "d01510c5-72d3-42df-89c6-91b80cc3b3dc",
                            TwoFactorEnabled = false,
                            UserName = "joanna15@email.com"
                        },
                        new
                        {
                            Id = "cf11da01-c496-4ecf-bc14-4797ef095626",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "0ffda498-3b3a-490e-857a-f7389e43883f",
                            Email = "Margie99@email.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Margie",
                            NormalizedEmail = "margie99@email.com",
                            NormalizedUserName = "margie99@email.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEKSf9oW8eZQl774G5pxzydpbBDp6xhyqTkLFnRB9wF26dBoH9cEumsJKseIvCQQE4A==",
                            PhoneNumberConfirmed = false,
                            Role = 0,
                            SecurityStamp = "76d084f6-0425-411d-ac6a-f96c7ede0fad",
                            TwoFactorEnabled = false,
                            UserName = "margie99@email.com"
                        },
                        new
                        {
                            Id = "00000000-0000-0000-0000-000000000000",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "4aa6a278-afe2-4472-a99c-f8825b6abab7",
                            Email = "alisonjoyforster@gmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Alison",
                            NormalizedEmail = "alisonjoyforster@gmail.com",
                            NormalizedUserName = "alisonjoyforster@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEFDSzyGxN8Wgujb4tqYb4NdeE5dQR23ysQzoD4zcOTWrS32pWaevqZELA4IuY5K05g==",
                            PhoneNumberConfirmed = false,
                            Role = 0,
                            SecurityStamp = "f755f7c6-2b36-4af5-8f1b-31bf78ea398a",
                            TwoFactorEnabled = false,
                            UserName = "alisonjoyforster@gmail.com"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", "AlchemyCoaching");

                    b.HasData(
                        new
                        {
                            Id = "512127ad-d7ec-44f8-afc4-6fc3abf7ba5a",
                            Name = "Client",
                            NormalizedName = "CLIENT"
                        },
                        new
                        {
                            Id = "4c191e43-2919-4428-a98c-c59ddf08866a",
                            Name = "Coach",
                            NormalizedName = "COACH"
                        },
                        new
                        {
                            Id = "d01a4ba0-f4be-491f-b542-07ab6e65940b",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", "AlchemyCoaching");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", "AlchemyCoaching");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", "AlchemyCoaching");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", "AlchemyCoaching");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", "AlchemyCoaching");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("ClientPortal.Server.Entities.PortalUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("ClientPortal.Server.Entities.PortalUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClientPortal.Server.Entities.PortalUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("ClientPortal.Server.Entities.PortalUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
